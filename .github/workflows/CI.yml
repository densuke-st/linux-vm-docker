name: Docker Image CI(main)

on:
  push:
    branches: [ "ci", "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "0 12 * * 0"
  workflow_dispatch:

jobs:
  build_job:
    name: Build
    #runs-on: ubuntu-latest
    runs-on: self-hosted
    # env:
    #   TESTIMAGE: test-${{ github.run_id }}-${{ github.run_number }}
    steps:
    - uses: actions/checkout@v3
    - name: Set random image name
      run: |
        echo "TESTIMAGE=testimage-${RANDOM}:${RANDOM}" > $GITHUB_ENV
    - name: Build the Docker image
      run: |
        BUILD_ARG="--build-arg PASSWORD=penguin"
        grep -q '/main$' <<< "${{ github.ref }}" && BUILD_ARG="${BUILD_ARG} --no-cache"
        docker buildx create --use --name builder
        docker buildx build --load -t ${TESTIMAGE} ${BUILD_ARG}  src
    - name: Test connection
      run: |
        NAME="test-${RANDOM}"
        docker run -P --name "${NAME}" -d --rm --privileged  ${TESTIMAGE}
        SSHPORT=$(docker container ps -f "name=${NAME}" | egrep -o '0.0.0.0:[0-9]+->22/tcp' | sed -r -e 's;.*:([0-9]+)->.*;\1;')
        sudo apt-get update; sudo apt-get install -y sshpass
        sshpass -p penguin ssh -p ${SSHPORT} -o StrictHostKeyChecking=false linux@127.0.0.1 uname -a
        # test for localed time
        sshpass -p penguin ssh -p ${SSHPORT} -o StrictHostKeyChecking=false linux@127.0.0.1 \
          bash -ec "test -f /etc/profile.d/locale-ja.sh; source /etc/profile.d/locale-ja.sh; date" | egrep 'å¹´'
        docker stop "${NAME}"
    - name: Test /etc/crontab
      run: |
        docker run --rm --privileged  ${TESTIMAGE} ls /etc/crontab
    #- name: Test skr
    #  run: |
    #      docker run --rm ${TESTIMAGE} sh -c 'test -x /usr/local/bin/skr'
    - name: login to docker hub
      if: ${{ endsWith(github.ref, '/main') && github.event_name != 'pull_request' }}
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_AUTH }}
    - name: rebuild and push
      if: ${{ endsWith(github.ref, '/main') && github.event_name != 'pull_request' }}
      run: |
        BUILD_ARG="--build-arg PASSWORD=penguin"
        docker buildx build --platform=linux/amd64,linux/arm64 --push -t densukest/ubuntu-it-soft:v2 ${BUILD_ARG}  src
    - name: cleanup image
      run: docker image rm ${TESTIMAGE}
