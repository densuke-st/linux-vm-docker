name: リリース工程

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
  push:
    branches:
      # - "ci"
      # - "main"
      # - "dev"
      - "feature/*"
    tags:
      - "v*.*.*"
  # pull_request:
  #   branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  #IMAGE_NAME: densuke/linux-vm-docker

jobs:
  build_job:
    name: Build
    runs-on: ubuntu-latest
    # CI.ymlで定義したワークフローが完了したときにこのワークフローも実行する
    #runs-on: self-hosted
    # env:
    #   TESTIMAGE: test-${{ github.run_id }}-${{ github.run_number }}
    steps:
    - name: バージョン番号取得
      # タグ名からバージョン番号を取得する
      # 例: v3.1.4 -> v3.1.4
      # ただし現在は開発中のため、強制的に v2.9.0としておきます
      run: |
        #VERSION=$(echo "${{ github.ref }}" | sed -e 's;refs/tags/v;;')
        VERSION=v2.9.0
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
    - name: マイナーバージョン取得
      # 環境変数VERSIONから、マイナーバージョンタグを生成する
      # VERSION=v3.1.4 -> MINOR_VERSION=v3.1
      run: |
        MINOR_VERSION=$(echo "${{ env.VERSION }}" | sed -e 's;\.[0-9]*$;;')
        echo "MINOR_VERSION=${MINOR_VERSION}" >> $GITHUB_ENV
    - name: メジャーバージョン取得
      # 環境変数VERSIONから、メジャーバージョンタグを生成する
      # VERSION=v3.1.4 -> MAJOR_VERSION=v3
      run: |
        MAJOR_VERSION=$(echo "${{ env.VERSION }}" | sed -e 's;\.[0-9]*\.[0-9]*$;;')
        echo "MAJOR_VERSION=${MAJOR_VERSION}" >> $GITHUB_ENV
    - uses: actions/checkout@v3
    - name: Log in to the Container registry
      # コンテナレジストリ荷ログインする
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        #username: ${{ github.actor }}
        username: ${{ secrets.REPO_USER}}
        password: ${{ secrets.REPO_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      # リポジトリからメタデータを取得する
      id: meta
      uses: docker/metadata-action@v4
      with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: src
        push: true
        # タグをちょっと抜いて挙動をチェック
        # ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.MAJOR_VERSION }}
        # ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.MINOR_VERSION }}
        # ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
        tags: |
          ${{ steps.meta.outputs.tags }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          PASSWORD=penguin
        platforms: linux/amd64
        #platforms: linux/amd64,linux/arm64
        provenance: false
